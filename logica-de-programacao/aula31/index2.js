var sobrenome = 'Freitas';

function falaOi() {
    console.log(sobrenome);   
}

falaOi();

/**

### ‚úÖ Explica√ß√£o:

Nesse caso, a fun√ß√£o `falaOi()` **acessa a vari√°vel `sobrenome` que est√° fora dela**, ou seja, no escopo **global**.

Isso √© poss√≠vel porque:

* O JavaScript faz **busca por escopo** (tamb√©m chamada de *lexical scope* ou escopo l√©xico).
* A fun√ß√£o `falaOi()` est√° definida **no mesmo escopo onde a vari√°vel `sobrenome` foi declarada**, ent√£o ela **enxerga** essa vari√°vel.

### üß† Escopo l√©xico:

A fun√ß√£o "lembra" do lugar onde foi criada, e por isso consegue acessar vari√°veis daquele ambiente, mesmo que voc√™ execute a fun√ß√£o em outro contexto.

---

### üîÅ Se voc√™ tivesse feito assim:

```javascript
function falaOi() {
    var sobrenome = 'Silva';
    console.log(sobrenome);   
}

falaOi(); // Silva
console.log(sobrenome); // Erro! 'sobrenome' is not defined
```

Nesse caso, a vari√°vel `sobrenome` est√° **dentro da fun√ß√£o**, com `var`, ent√£o ela s√≥ existe l√°. O `console.log` fora da fun√ß√£o d√° erro.

 */

//--------------------------------------------------------------------------------------------------------------------------------------------

/**

```javascript
const verdadeira = true;
```

---

### üß† C√≥digo completo:

```javascript
const verdadeira = true;

function falaOi () {
    var sobrenome = 'Miranda';

    if (verdadeira) {
        let nome = 'Luiz';
        console.log(sobrenome); // üü¢ OK - "Miranda"
    }

    console.log(nome); // üî¥ ERRO - "nome is not defined"
}

falaOi();
```

---

### ‚úÖ O que funciona:

* `console.log(sobrenome);` funciona perfeitamente dentro do `if`, pois `sobrenome` √© declarada com `var` **no escopo da fun√ß√£o**, e o `if` est√° dentro desse mesmo escopo.
* A fun√ß√£o `falaOi()` "enxerga" `sobrenome`.

---

### ‚ùå O que d√° erro:

* `console.log(nome);` **fora do bloco do `if`** causa erro:

  * A vari√°vel `nome` foi declarada com `let`, que tem **escopo de bloco `{}`**, ou seja, s√≥ existe dentro do `if`.
  * Tentar acess√°-la **fora do `if`** resulta em:

    ```
    ReferenceError: nome is not defined
    ```

---

### üß™ Para corrigir (caso voc√™ queira acessar `nome` fora do `if`):

#### Usando `var` (mas cuidado com escopo solto):

```javascript
if (verdadeira) {
    var nome = 'Luiz'; // agora tem escopo de fun√ß√£o
}
console.log(nome); // Luiz
```

#### Melhor forma (declarar fora e atribuir dentro):

```javascript
let nome;

if (verdadeira) {
    nome = 'Luiz';
}

console.log(nome); // Luiz
```

---
 */